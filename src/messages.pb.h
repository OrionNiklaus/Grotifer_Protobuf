/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_OCTAVE_MESSAGES_PB_H_INCLUDED
#define PB_OCTAVE_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _octave_Packet {
    int32_t type; /* A required integer field to indicate the message type */
    bool has_angle;
    float angle; /* An optional floating-point field to hold the angle */
} octave_Packet;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define octave_Packet_init_default               {0, false, 0}
#define octave_Packet_init_zero                  {0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define octave_Packet_type_tag                   1
#define octave_Packet_angle_tag                  2

/* Struct field encoding specification for nanopb */
#define octave_Packet_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    type,              1) \
X(a, STATIC,   OPTIONAL, FLOAT,    angle,             2)
#define octave_Packet_CALLBACK NULL
#define octave_Packet_DEFAULT NULL

extern const pb_msgdesc_t octave_Packet_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define octave_Packet_fields &octave_Packet_msg

/* Maximum encoded size of messages (where known) */
#define OCTAVE_MESSAGES_PB_H_MAX_SIZE            octave_Packet_size
#define octave_Packet_size                       16

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
